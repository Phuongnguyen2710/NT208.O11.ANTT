@model IEnumerable<TicketLand_project.Models.member>


@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout_admin.cshtml";
}
<!DOCTYPE>

<div class="container_custom">


    <div class="custom_h1">
        <h1><b>QUẢN LÝ TÀI KHOẢN</b></h1>
    </div>

    <hr />
    <div class="row">
        <div class="col-md-10">
            <p>
                <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Create")'">Create New +</button>
            </p>
        </div>

        @*<div class="custom_search col-md-2">
                <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names..">
                <br />
            </div>*@
    </div>


    <div class="box_shadow">
        <table class="tableStyle">
            <tr>
                <!-- Các cột tiêu đề -->
                <th>STT</th>
                <th>Họ Tên</th>
                <th>Username</th>
                @*<th>Password</th>*@
                <th>Giới Tính</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Avatar</th>
                <th>Point</th>
                <th>Vai trò</th>
                <th>Action</th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.member_id)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.member_name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.username)
                    </td>
                    @*<td class="password-cell">
                            @{
                                string password = item.password; // Lấy giá trị password từ model
                                string displayedPassword = "";

                                if (password.Length > 10)
                                {
                                    displayedPassword = password.Substring(0, 8) + "...";
                                }
                                else
                                {
                                    displayedPassword = password;
                                }
                            }

                            <span class="short-text">
                                @Html.Raw(displayedPassword.Replace(Environment.NewLine, "<br>"))
                            </span>
                            @if (password.Length > 8)
                            {
                                <button class="expand-button" onclick="togglePassword(this)">Xem thêm</button>
                                <span class="full-text" style="display: none;">
                                    @Html.Raw(password.Replace(Environment.NewLine, "<br>"))
                                </span>
                            }
                        </td>*@

                    <td>
                        @{
                            // Hiển thị "Nam" nếu giá trị là true, ngược lại hiển thị "Nữ"
                            var genderDisplay = item.gender.HasValue ? (item.gender.Value ? "Nam" : "Nữ") : "Khác";
                        }

                        @Html.DisplayFor(modelItem => genderDisplay)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.email)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.phone)
                    </td>
                    <td>
                        @{
                            var imageDataUrl = "data:image/png;base64," + item.member_avatar;
                        }
                        <img src="@imageDataUrl" style="width: 50px; height: 50px" />
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.member_point)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ROLE.role_name)
                    </td>
                    <td>
                        <button class="btn btn-xs btn-primary " onclick="location.href='@Url.Action("Edit", new { id = item.member_id })'">
                            <i class="fa fa-edit custom_i"></i>
                        </button>

                        <button class="btn btn-xs btn-warning " onclick="location.href='@Url.Action("Details", new { id = item.member_id })'">
                            <i class="fa fa-info-circle custom_i"></i>
                        </button>

                        <button class="btn btn-xs btn-danger" data-toggle="modal" data-target="#DeleteModal_@item.member_id">
                            <i class="fa fa-trash custom_i"></i>
                        </button>

                        <!-- Delete Modal -->
                        <div class="modal fade" id="DeleteModal_@item.member_id" tabindex="-1" role="dialog" aria-labelledby="DeleteLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="DeleteLabel">Xác nhận xóa</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        Bạn có chắc chắn muốn xóa đối tượng này không?
                                        <input type="hidden" id="deleteId" value="" />
                                    </div>

                                    <div class="modal-footer">
                                        @using (Html.BeginForm("Delete", "manage_members", FormMethod.Post, new { id = "confirmDelete" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" id="deleteId" name="id" value="@item.member_id" />
                                            <div class="form-actions no-color text-center">
                                                <input type="submit" value="Xóa" class="btn btn-danger" />
                                                <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    </td>
                </tr>
            }
        </table>
    </div>

</div>



<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js"></script>


<script>
    // Thêm sự kiện click cho nút "Xác nhận" trong modal
    document.getElementById("confirmDelete").addEventListener("click", function () {
        // Lấy seat_id từ hidden input trong modal
        var deleteId = document.getElementById("deleteId").value;

        // Đặt giá trị vào input hidden trong form
        document.getElementById("deleteForm").elements["id"].value = deleteId;

        // Submit form
        $("#deleteForm").submit();
    });

</script>